#define TRACK_END_FRAME (1920)
#define STAR_POWER_COLOR
($starpowercolor_r $starpowercolor_g $starpowercolor_b)
#define GEM_COLOR
($gemcolor_r $gemcolor_g $gemcolor_b)
#define SMASHER_COLOR
($smashercolor_r $smashercolor_g $smashercolor_b)
#define STREAK_COLOR
($streaklabel_r $streaklabel_g $streaklabel_b)
#define STREAK_STANDARD_COLOR
($streakstandardlabel_r $streakstandardlabel_g $streakstandardlabel_b)
#define SONG_PROGRESS_BAR_COLOR
($songprogressbar_r $songprogressbar_g $songprogressbar_b)
#define STAR_PROGRESS_BAR_COLOR
($starprogressbar_r $starprogressbar_g $starprogressbar_b)
#define STAR_COUNTER_COLOR
($starcounter_r $starcounter_g $starcounter_b)
#define SCORE_NUM_COLOR
($scorenumcolor_r $scorenumcolor_g $scorenumcolor_b)
#define SCORE_NUM_FRAME_COLOR
($scorenumframe_r $scorenumframe_g $scorenumframe_b)
#define MTV_OVERLAY_COLOR
($mtv_r $mtv_g $mtv_b)
#define TRACK_RAIL_COLOR
($trackrailcolor_r $trackrailcolor_g $trackrailcolor_b)
#define BEATLINE_COLOR
($beatlinecolor_r $beatlinecolor_g $beatlinecolor_b)
#define TRACK_MODIFIER_HANDLERS
(
#ifndef HX_XBOX
   {if_else $noflames
      {{track_panel loaded_dir} iterate ParticleSys $m {$m set_showing FALSE}}
      {{track_panel loaded_dir} iterate ParticleSys $m {$m set_showing TRUE}}
   }
   {{track_panel find beat_line3.mesh} set_local_scale $trackbeatx 1.0 1.0}
   {{track_panel find beat_line4.mesh} set_local_scale $trackbeatx 1.0 1.0}
   {{track_panel find beat_line5.mesh} set_local_scale $trackbeatx 1.0 1.0}
   {{track_panel find quarter_beat_line3.mesh} set_local_scale $trackbeatx 1.0 1.0}
   {{track_panel find quarter_beat_line4.mesh} set_local_scale $trackbeatx 1.0 1.0}
   {{track_panel find quarter_beat_line5.mesh} set_local_scale $trackbeatx 1.0 1.0}
   {{track_panel find half_beat_line3.mesh} set_local_scale $trackbeatx 1.0 1.0}
   {{track_panel find half_beat_line4.mesh} set_local_scale $trackbeatx 1.0 1.0}
   {{track_panel find half_beat_line5.mesh} set_local_scale $trackbeatx 1.0 1.0}
#else
   {if {exists track_both}
      {set $tracktype track_both}
   }
   {if {exists track_bright}
      {set $tracktype track_bright}
   }
   {if {exists track_dark}
      {set $tracktype track_dark}
   }
   {if {exists track_drum}
      {set $tracktype track_drum}
   }
   {if {exists track_new}
      {set $tracktype track_new}
   }
   {if {exists track_old}
      {set $tracktype track_old}
   }
   {{{track_panel loaded_dir} find $tracktype} iterate ParticleSys $m {$m set_showing {! $noflames}}} ;no flames
   {if $noflames
      {{{{track_panel loaded_dir} find $tracktype} find smash_firelight.tex} set_bitmap track/custom_track_textures/_no_highway.png} ;no flames addition
   }
   {if $voidfrets
      {if_else $gh3track
         {{{{track_panel loaded_dir} find $tracktype} find smasher_off.tex} set_bitmap track/custom_track_textures/smasher_off_gh3_keep.png}
         {{{{track_panel loaded_dir} find $tracktype} find smasher_off.tex} set_bitmap track/custom_track_textures/blk_keep.png}
      }
   }
   {if $darkstrums
      {{{{track_panel loaded_dir} find $tracktype} find gem.tex} set_bitmap track/custom_track_textures/gem_dark_keep.png} ;dark strum gems
   }
{if $eyeballgems
      {{{{track_panel loaded_dir} find $tracktype} find gem.tex} set_bitmap track/custom_track_textures/gem_eyeball_keep.png} ;eyeball gems
   }

   {{{{track_panel loaded_dir} find $tracktype} find lightning_1.mat} set color {pack_color STAR_POWER_COLOR}} ;sp colors
   {{{{track_panel loaded_dir} find $tracktype} find lightning_2.mat} set color {pack_color STAR_POWER_COLOR}} ;sp colors
   {{{{track_panel loaded_dir} find $tracktype} find lightning_trackglow.mat} set color {pack_color STAR_POWER_COLOR}} ;sp colors
   {{{{track_panel loaded_dir} find $tracktype} find smash_combo_lightning01.mat} set color {pack_color STAR_POWER_COLOR}} ;sp colors
   {{{{track_panel loaded_dir} find $tracktype} find smash_combo_lightning02.mat} set color {pack_color STAR_POWER_COLOR}} ;sp colors
   {{{{track_panel loaded_dir} find $tracktype} find smash_combo_lightning03.mat} set color {pack_color STAR_POWER_COLOR}} ;sp colors
   {{{{track_panel loaded_dir} find $tracktype} find smash_flamelight_starcollect.mat} set color {pack_color STAR_POWER_COLOR}} ;sp colors
   {{{{track_panel loaded_dir} find $tracktype} find star_base.mat} set color {pack_color STAR_POWER_COLOR}} ;sp colors
   {{{{track_panel loaded_dir} find $tracktype} find tail_bonus.mat} set color {pack_color STAR_POWER_COLOR}} ;sp colors
   {{{{track_panel loaded_dir} find $tracktype} find tail_bonus_particle.mat} set color {pack_color STAR_POWER_COLOR}} ;sp colors
   {{{{track_panel loaded_dir} find $tracktype} find gem_bonus.mat} set color {pack_color STAR_POWER_COLOR}} ;sp colors
   {{{{track_panel loaded_dir} find $tracktype} find now_ring_bonus_1.mat} set color {pack_color STAR_POWER_COLOR}} ;sp colors
   {{{{track_panel loaded_dir} find $tracktype} find now_ring_bonus.mat} set color {pack_color STAR_POWER_COLOR}} ;sp colors
   {{{{track_panel loaded_dir} find $tracktype} find tail_glow_bonus.mat} set color {pack_color STAR_POWER_COLOR}} ;sp colors
   {{{{track_panel loaded_dir} find $tracktype} find tail_glow_star.mat} set color {pack_color STAR_POWER_COLOR}} ;sp colors
   {{{{track_panel loaded_dir} find $tracktype} find tail_star.mat} set color {pack_color STAR_POWER_COLOR}} ;sp colors
   {{{{track_panel loaded_dir} find $tracktype} find gem_bonus2.mat} set color {pack_color STAR_POWER_COLOR}} ;sp colors
   {{{{track_panel loaded_dir} find $tracktype} find gem_bonus_spark1.mat} set color {pack_color STAR_POWER_COLOR}} ;sp colors
   {{{{track_panel loaded_dir} find $tracktype} find gem_bonus_spark2.mat} set color {pack_color STAR_POWER_COLOR}} ;sp colors
   {{{{track_panel loaded_dir} find $tracktype} find gem_smasher_bonus.mat} set color {pack_color STAR_POWER_COLOR}} ;sp colors
   {{{{track_panel loaded_dir} find $tracktype} find gem_smasher_bonus_1.mat} set color {pack_color STAR_POWER_COLOR}} ;sp colors
   {{{{hud loaded_dir} find BandStarMeterDir1} find amp_inside_star.mat} set color {pack_color STAR_POWER_COLOR}} ;sp colors
   {{{{hud loaded_dir} find BandStarMeterDir1} find amp_inside_star_path.mat} set color {pack_color STAR_POWER_COLOR}} ;sp colors
   {{{{hud loaded_dir} find BandStarMeterDir1} find amp_tube_glow.mat} set color {pack_color STAR_POWER_COLOR}} ;sp colors
   {{{{hud loaded_dir} find BandStarMeterDir1} find amp_tube_glow_meter.mat} set color {pack_color STAR_POWER_COLOR}} ;sp colors
   {{{{hud loaded_dir} find BandStarMeterDir1} find lightning_bot_01_0.mat} set color {pack_color STAR_POWER_COLOR}} ;sp colors
   {{{{hud loaded_dir} find BandStarMeterDir1} find lightning_bot_02_0.mat} set color {pack_color STAR_POWER_COLOR}} ;sp colors
   {{{{hud loaded_dir} find BandStarMeterDir1} find lightning_bot_03_0.mat} set color {pack_color STAR_POWER_COLOR}} ;sp colors
   {{{{hud loaded_dir} find BandStarMeterDir1} find lightning_bot_04_0.mat} set color {pack_color STAR_POWER_COLOR}} ;sp colors
   {{{{hud loaded_dir} find BandStarMeterDir1} find lightning_top_01_0.mat} set color {pack_color STAR_POWER_COLOR}} ;sp colors
   {{{{hud loaded_dir} find BandStarMeterDir1} find lightning_top_02_0.mat} set color {pack_color STAR_POWER_COLOR}} ;sp colors
   {{{{hud loaded_dir} find BandStarMeterDir1} find lightning_top_03_0.mat} set color {pack_color STAR_POWER_COLOR}} ;sp colors
   {{{{hud loaded_dir} find BandStarMeterDir1} find lightning_top_04_0.mat} set color {pack_color STAR_POWER_COLOR}} ;sp colors
   {{{{hud loaded_dir} find BandStarMeterDir1} find star_glow.mat} set color {pack_color STAR_POWER_COLOR}} ;sp colors
   {{{{hud loaded_dir} find BandStarMeterDir1} find amp_end_star.mat} set color {pack_color STAR_POWER_COLOR}} ;sp colors
   {{{{track_panel loaded_dir} find $tracktype} find lightning_trackglow.tex} set_bitmap track/custom_track_textures/_no_highway.png} ;remove the track side glow stuff because I hate it
   {{{{hud loaded_dir} find BandStarMeterDir1} find amp_inside_bar.mat} set color {pack_color 0.24 0.24 0.24}} ;I dont like this bar being slightly blue

{if $customgemcolor
   {{{{track_panel loaded_dir} find $tracktype} find gem.tex} set_bitmap track/custom_track_textures/hop_keep.png} ;custom gem outline color
   {{{{track_panel loaded_dir} find $tracktype} find gem.mat} set color {pack_color GEM_COLOR}} ;custom gem outline color
   {{{{track_panel loaded_dir} find $tracktype} find gem_bottom.mat} set color {pack_color GEM_COLOR}} ;custom gem outline color
   {{{{track_panel loaded_dir} find $tracktype} find tail_blue.mat} set color {pack_color GEM_COLOR}} ;custom gem outline color
   {{{{track_panel loaded_dir} find $tracktype} find tail_glow_blue.mat} set color {pack_color GEM_COLOR}} ;custom gem outline color
   {{{{track_panel loaded_dir} find $tracktype} find tail_glow_green.mat} set color {pack_color GEM_COLOR}} ;custom gem outline color
   {{{{track_panel loaded_dir} find $tracktype} find tail_glow_orange.mat} set color {pack_color GEM_COLOR}} ;custom gem outline color
   {{{{track_panel loaded_dir} find $tracktype} find tail_glow_red.mat} set color {pack_color GEM_COLOR}} ;custom gem outline color
   {{{{track_panel loaded_dir} find $tracktype} find tail_glow_tight.mat} set color {pack_color GEM_COLOR}} ;custom gem outline color
   {{{{track_panel loaded_dir} find $tracktype} find tail_glow_whammy.mat} set color {pack_color GEM_COLOR}} ;custom gem outline color
   {{{{track_panel loaded_dir} find $tracktype} find tail_glow_yellow.mat} set color {pack_color GEM_COLOR}} ;custom gem outline color
   {{{{track_panel loaded_dir} find $tracktype} find tail_green.mat} set color {pack_color GEM_COLOR}} ;custom gem outline color
   {{{{track_panel loaded_dir} find $tracktype} find tail_orange.mat} set color {pack_color GEM_COLOR}} ;custom gem outline color
   {{{{track_panel loaded_dir} find $tracktype} find tail_red.mat} set color {pack_color GEM_COLOR}} ;custom gem outline color
   {{{{track_panel loaded_dir} find $tracktype} find tail_yellow.mat} set color {pack_color GEM_COLOR}} ;custom gem outline color
   {{{{track_panel loaded_dir} find $tracktype} find star.mat} set color {pack_color GEM_COLOR}} ;custom gem outline color
   {{{{track_panel loaded_dir} find $tracktype} find dot_blue.mat} set color {pack_color GEM_COLOR}} ;custom gem outline color
   {{{{track_panel loaded_dir} find $tracktype} find dot_green.mat} set color {pack_color GEM_COLOR}} ;custom gem outline color
   {{{{track_panel loaded_dir} find $tracktype} find dot_orange.mat} set color {pack_color GEM_COLOR}} ;custom gem outline color
   {{{{track_panel loaded_dir} find $tracktype} find dot_red.mat} set color {pack_color GEM_COLOR}} ;custom gem outline color
   {{{{track_panel loaded_dir} find $tracktype} find dot_yellow.mat} set color {pack_color GEM_COLOR}} ;custom gem outline color
   {{{{track_panel loaded_dir} find $tracktype} find dot_top_hopo2_blue.mat} set color {pack_color GEM_COLOR}} ;custom gem outline color
   {{{{track_panel loaded_dir} find $tracktype} find dot_top_hopo2_green.mat} set color {pack_color GEM_COLOR}} ;custom gem outline color
   {{{{track_panel loaded_dir} find $tracktype} find dot_top_hopo2_orange.mat} set color {pack_color GEM_COLOR}} ;custom gem outline color
   {{{{track_panel loaded_dir} find $tracktype} find dot_top_hopo2_red.mat} set color {pack_color GEM_COLOR}} ;custom gem outline color
   {{{{track_panel loaded_dir} find $tracktype} find dot_top_hopo2_yellow.mat} set color {pack_color GEM_COLOR}} ;custom gem outline color
}

{if $customsmashercolor
   {{{{track_panel loaded_dir} find $tracktype} find now_blue_add.tex} set_bitmap track/custom_track_textures/now_add_keep.png} ;remove the track side glow stuff because I hate it
   {{{{track_panel loaded_dir} find $tracktype} find now_green_add.tex} set_bitmap track/custom_track_textures/now_add_keep.png} ;remove the track side glow stuff because I hate it
   {{{{track_panel loaded_dir} find $tracktype} find now_orange_add.tex} set_bitmap track/custom_track_textures/now_add_keep.png} ;remove the track side glow stuff because I hate it
   {{{{track_panel loaded_dir} find $tracktype} find now_red_add.tex} set_bitmap track/custom_track_textures/now_add_keep.png} ;remove the track side glow stuff because I hate it
   {{{{track_panel loaded_dir} find $tracktype} find now_yellow_add.tex} set_bitmap track/custom_track_textures/now_add_keep.png} ;remove the track side glow stuff because I hate it
   {{{{track_panel loaded_dir} find $tracktype} find now_ring.mat} set color {pack_color SMASHER_COLOR}} ;custom smasher color
   {{{{track_panel loaded_dir} find $tracktype} find now_ring_blue.mat} set color {pack_color SMASHER_COLOR}} ;custom smasher color
   {{{{track_panel loaded_dir} find $tracktype} find now_ring_bonus.mat} set color {pack_color SMASHER_COLOR}} ;custom smasher color
   {{{{track_panel loaded_dir} find $tracktype} find now_ring_green.mat} set color {pack_color SMASHER_COLOR}} ;custom smasher color
   {{{{track_panel loaded_dir} find $tracktype} find now_ring_orange.mat} set color {pack_color SMASHER_COLOR}} ;custom smasher color
   {{{{track_panel loaded_dir} find $tracktype} find now_ring_red.mat} set color {pack_color SMASHER_COLOR}} ;custom smasher color
   {{{{track_panel loaded_dir} find $tracktype} find now_ring_yellow.mat} set color {pack_color SMASHER_COLOR}} ;custom smasher color
   {{{{track_panel loaded_dir} find $tracktype} find now_ring_blue_1.mat} set color {pack_color SMASHER_COLOR}} ;custom smasher color
   {{{{track_panel loaded_dir} find $tracktype} find now_ring_bonus_1.mat} set color {pack_color SMASHER_COLOR}} ;custom smasher color
   {{{{track_panel loaded_dir} find $tracktype} find now_ring_green_1.mat} set color {pack_color SMASHER_COLOR}} ;custom smasher color
   {{{{track_panel loaded_dir} find $tracktype} find now_ring_orange_1.mat} set color {pack_color SMASHER_COLOR}} ;custom smasher color
   {{{{track_panel loaded_dir} find $tracktype} find now_ring_red_1.mat} set color {pack_color SMASHER_COLOR}} ;custom smasher color
   {{{{track_panel loaded_dir} find $tracktype} find now_ring_yellow_1.mat} set color {pack_color SMASHER_COLOR}} ;custom smasher color
   {{{{track_panel loaded_dir} find $tracktype} find gem_smasher_blue.mat} set color {pack_color SMASHER_COLOR}} ;custom smasher color
   {{{{track_panel loaded_dir} find $tracktype} find gem_smasher_bonus.mat} set color {pack_color SMASHER_COLOR}} ;custom smasher color
   {{{{track_panel loaded_dir} find $tracktype} find gem_smasher_green.mat} set color {pack_color SMASHER_COLOR}} ;custom smasher color
   {{{{track_panel loaded_dir} find $tracktype} find gem_smasher_orange.mat} set color {pack_color SMASHER_COLOR}} ;custom smasher color
   {{{{track_panel loaded_dir} find $tracktype} find gem_smasher_red.mat} set color {pack_color SMASHER_COLOR}} ;custom smasher color
   {{{{track_panel loaded_dir} find $tracktype} find gem_smasher_yellow.mat} set color {pack_color SMASHER_COLOR}} ;custom smasher color
}


   {{streak_overlay_panel find star_counter.lbl} set color {pack_color STAR_COUNTER_COLOR}} ;custom star counter color
   
   {{streak_overlay_panel find percentbar_p1.mat} set color {pack_color SONG_PROGRESS_BAR_COLOR}} ;custom song progress bar color
   
   {{streak_overlay_panel find percentbar_p2.mat} set color {pack_color STAR_PROGRESS_BAR_COLOR}} ;custom star progress bar color
   
   {{mtv_overlay_panel find mtv_campaign_line1.lbl} set color {pack_color MTV_OVERLAY_COLOR}} ;custom mtv overlay color
   {{mtv_overlay_panel find mtv_campaign_line2.lbl} set color {pack_color MTV_OVERLAY_COLOR}} ;custom mtv overlay color
   {{mtv_overlay_panel find mtv_campaign_line3.lbl} set color {pack_color MTV_OVERLAY_COLOR}} ;custom mtv overlay color
   {{mtv_overlay_panel_buffer find mtv_campaign_line1.lbl} set color {pack_color MTV_OVERLAY_COLOR}} ;custom mtv overlay color
   {{mtv_overlay_panel_buffer find mtv_campaign_line2.lbl} set color {pack_color MTV_OVERLAY_COLOR}} ;custom mtv overlay color
   {{mtv_overlay_panel_buffer find mtv_campaign_line3.lbl} set color {pack_color MTV_OVERLAY_COLOR}} ;custom mtv overlay color
   {{mtv_overlay_panel find mtv_campaign_line1.lbl} set_showing TRUE} ;custom mtv overlay color
   {{mtv_overlay_panel find mtv_campaign_line2.lbl} set_showing TRUE} ;custom mtv overlay color
   {{mtv_overlay_panel find mtv_campaign_line3.lbl} set_showing TRUE} ;custom mtv overlay color
   {{mtv_overlay_panel_buffer find mtv_campaign_line1.lbl} set_showing TRUE} ;custom mtv overlay color
   {{mtv_overlay_panel_buffer find mtv_campaign_line2.lbl} set_showing TRUE} ;custom mtv overlay color
   {{mtv_overlay_panel_buffer find mtv_campaign_line3.lbl} set_showing TRUE} ;custom mtv overlay color
   {mtv_overlay_panel setup_text}
   {mtv_overlay_panel_buffer setup_text}

   {{{{hud loaded_dir} find BandScoreDisplay1} find score_num_frame.mat} set color {pack_color SCORE_NUM_FRAME_COLOR}} ;score number frame color

   {{{{hud loaded_dir} find BandScoreDisplay1} find score_0.tex} set_bitmap {sprint "track/custom_track_textures/score_num_" $scorenumtype "_0_keep.png"}} ;score number color
   {{{{hud loaded_dir} find BandScoreDisplay1} find score_1.tex} set_bitmap {sprint "track/custom_track_textures/score_num_" $scorenumtype "_1_keep.png"}} ;score number color
   {{{{hud loaded_dir} find BandScoreDisplay1} find score_2.tex} set_bitmap {sprint "track/custom_track_textures/score_num_" $scorenumtype "_2_keep.png"}} ;score number color
   {{{{hud loaded_dir} find BandScoreDisplay1} find score_3.tex} set_bitmap {sprint "track/custom_track_textures/score_num_" $scorenumtype "_3_keep.png"}} ;score number color
   {{{{hud loaded_dir} find BandScoreDisplay1} find score_4.tex} set_bitmap {sprint "track/custom_track_textures/score_num_" $scorenumtype "_4_keep.png"}} ;score number color
   {{{{hud loaded_dir} find BandScoreDisplay1} find score_5.tex} set_bitmap {sprint "track/custom_track_textures/score_num_" $scorenumtype "_5_keep.png"}} ;score number color
   {{{{hud loaded_dir} find BandScoreDisplay1} find score_6.tex} set_bitmap {sprint "track/custom_track_textures/score_num_" $scorenumtype "_6_keep.png"}} ;score number color
   {{{{hud loaded_dir} find BandScoreDisplay1} find score_7.tex} set_bitmap {sprint "track/custom_track_textures/score_num_" $scorenumtype "_7_keep.png"}} ;score number color
   {{{{hud loaded_dir} find BandScoreDisplay1} find score_8.tex} set_bitmap {sprint "track/custom_track_textures/score_num_" $scorenumtype "_8_keep.png"}} ;score number color
   {{{{hud loaded_dir} find BandScoreDisplay1} find score_9.tex} set_bitmap {sprint "track/custom_track_textures/score_num_" $scorenumtype "_9_keep.png"}} ;score number color
   
   {{{{hud loaded_dir} find BandScoreDisplay1} find score_0.mat} set color {pack_color SCORE_NUM_COLOR}} ;score number color
   {{{{hud loaded_dir} find BandScoreDisplay1} find score_1.mat} set color {pack_color SCORE_NUM_COLOR}} ;score number color
   {{{{hud loaded_dir} find BandScoreDisplay1} find score_2.mat} set color {pack_color SCORE_NUM_COLOR}} ;score number color
   {{{{hud loaded_dir} find BandScoreDisplay1} find score_3.mat} set color {pack_color SCORE_NUM_COLOR}} ;score number color
   {{{{hud loaded_dir} find BandScoreDisplay1} find score_4.mat} set color {pack_color SCORE_NUM_COLOR}} ;score number color
   {{{{hud loaded_dir} find BandScoreDisplay1} find score_5.mat} set color {pack_color SCORE_NUM_COLOR}} ;score number color
   {{{{hud loaded_dir} find BandScoreDisplay1} find score_6.mat} set color {pack_color SCORE_NUM_COLOR}} ;score number color
   {{{{hud loaded_dir} find BandScoreDisplay1} find score_7.mat} set color {pack_color SCORE_NUM_COLOR}} ;score number color
   {{{{hud loaded_dir} find BandScoreDisplay1} find score_8.mat} set color {pack_color SCORE_NUM_COLOR}} ;score number color
   {{{{hud loaded_dir} find BandScoreDisplay1} find score_9.mat} set color {pack_color SCORE_NUM_COLOR}} ;score number color

   {{{{track_panel loaded_dir} find $tracktype} find rail_light.lit} set color {pack_color TRACK_RAIL_COLOR}} ;rail color
   {{{{track_panel loaded_dir} find $tracktype} find track1.lit} set color {pack_color TRACK_RAIL_COLOR}} ;rail color
   {{{{track_panel loaded_dir} find $tracktype} find track2.lit} set color {pack_color TRACK_RAIL_COLOR}} ;rail color

   {{{{track_panel loaded_dir} find $tracktype} find bar_line5_light.lit} set color {pack_color BEATLINE_COLOR}} ;beat line
   {{{{track_panel loaded_dir} find $tracktype} find bar_line.mat} set color {pack_color BEATLINE_COLOR}} ;beat line
   {{{{track_panel loaded_dir} find $tracktype} find beat_line.mat} set color {pack_color BEATLINE_COLOR}} ;beat line
   {{{{track_panel loaded_dir} find $tracktype} find half_beat_line.mat} set color {pack_color BEATLINE_COLOR}} ;beat line
   {{{{track_panel loaded_dir} find $tracktype} find half_beat_line1.mat} set color {pack_color BEATLINE_COLOR}} ;beat line
   {{{{track_panel loaded_dir} find $tracktype} find quarter_beat_line.mat} set color {pack_color BEATLINE_COLOR}} ;beat line

   ;random testings, sets all in specific dirs to specific colors
   ;{{{hud loaded_dir} find BandCrowdMeterDir1} iterate Mat $m {$m set color {pack_color 0.84 0.20 0.57}}}
   ;{{{hud loaded_dir} find BandScoreDisplay1} iterate Mat $m {$m set color {pack_color 0.84 0.20 0.57}}}
   ;{{{hud loaded_dir} find BandStarMeterDir1} iterate Mat $m {$m set color {pack_color 0.84 0.20 0.57}}}
   ;{{{hud loaded_dir} find BandStarMeterDir1} iterate Light $m {$m set color {pack_color 0.84 0.20 0.57}}}
   ;{{{hud loaded_dir} find BandStreakDisplay1} iterate Mat $m {$m set color {pack_color 0.84 0.20 0.57}}}
   ;{{hud loaded_dir} iterate Mat $m {$m set color {pack_color 0.84 0.20 0.57}}}

   {{{{track_panel loaded_dir} find $tracktype} find cameras.grp} set_local_scale_index 0 $trackcamx}
   {{{{track_panel loaded_dir} find $tracktype} find reset_cams..grp} set_local_scale_index 0 $trackcamx}
   {{{{track_panel loaded_dir} find $tracktype} find beat_line5.mesh} set_local_scale_index 0 $trackbeatx}
   {{{{track_panel loaded_dir} find $tracktype} find half_beat_line5.mesh} set_local_scale_index 0 $trackbeatx}
   {{{{track_panel loaded_dir} find $tracktype} find bar_line5.mesh} set_local_scale_index 0 $trackbeatx}
   {{{{track_panel loaded_dir} find $tracktype} find track_lane_lines.mesh} set_local_scale_index 0 $trackbeatx}
   {{{{track_panel loaded_dir} find $tracktype} find track_mask.mesh} set_local_scale_index 0 $trackbeatx}
#endif
   {track_panel reset} ;after setting up the track above, you have to reset the track to "apply" your changes
)
{new
   TrackPanel
   track_panel
#ifndef HX_XBOX
   (file
      {switch {game get_track_sym 0}
         (bass '../track/track.milo')
         (drum '../track/track_drum.milo')
         (rhythm '../track/track.milo')
         (guitar '../track/track.milo')
      }
   )
#else
   (file
      {if_else {== {gamecfg get_num_players} 1}
         {do
            {if_else $brighthopos
               {do
                  {if_else $gh1track
                     ../track/old_bright_panel_1p.milo
                     {if_else $gh3track
                        ../track/gh3_bright_panel_1p.milo
                        ../track/bright_panel_1p.milo ;end bright
                     
                     }
                  }
               }
               {if_else $gh1track
                  ../track/old_panel_1p.milo
                  {if_else $gh3track
                     ../track/gh3_panel_1p.milo
                     ../track/track_panel_1p.milo ;end 1p panels
                  }
               }
            }
         }
         {do
            {if_else $brighthopos
               {do
                  {if_else $gh1track
                     ../track/old_bright_panel_2p.milo
                     {if_else $gh3track
                        ../track/gh3_bright_panel_2p.milo
                        ../track/bright_panel_2p.milo ;end bright
                     }
                  }
               }
               {if_else $gh1track
                  ../track/old_panel_2p.milo
                  {if_else $gh3track
                     ../track/gh3_panel_2p.milo
                     ../track/track_panel_2p.milo
                  }
               }
            }
         }
      }
   )
#endif
   (set_track_out
      {$this set_frame TRACK_END_FRAME}
      {switch {gamecfg get mode}
         (career
            {name_overlay_panel setup_text}
            {name_overlay_panel show_overlay
               {if_else $cheat_enabled_performance_mode
                  FALSE
                  {if_else $autoplay
                     TRUE
                     $nametitle
                  }
               }
            }
         )
         (quickplay
            {name_overlay_panel setup_text}
            {name_overlay_panel show_overlay
               {if_else $cheat_enabled_performance_mode
                  FALSE
                  {if_else $autoplay
                     TRUE
                     $nametitle
                  }
               }
            }
         )
         (multi_vs kDataUnhandled)
         (multi_fo kDataUnhandled)
         (multi_coop kDataUnhandled)
         (practice
            {name_overlay_panel setup_text}
            {name_overlay_panel show_overlay
               {if_else $cheat_enabled_performance_mode
                  FALSE
                  {if_else $autoplay
                     TRUE
                     $nametitle
                  }
               }
            }
         )
      }
   )
   (set_track_in
      {$this set_frame 0}
   )
   (animate_track
      ($start $end $period $units)
      {$this animate
         (units $units)
         (range $start $end)
         (period $period)
      }
   )
   (play_track_sfx
      ($sfx)
      {play_game_sfx $sfx}
   )
   (animate_track_out
      {$this play_track_sfx TRACK_EXTEND_SFX}
      {$this animate_track 0 TRACK_END_FRAME 1 kTaskSeconds}
   )
   (animate_track_out_fast
      {$this animate_track 0 TRACK_END_FRAME 0.6 kTaskTutorialSeconds}
   )
   (animate_track_in_fast
      {$this animate_track TRACK_END_FRAME 0 0.6 kTaskTutorialSeconds}
   )
   (intro_start_msg
      {$this reset}
      {$this set_showing
         {&&
            {gamecfg get show_track}
            {&&
               {! $cheat_enabled_performance_mode}
               {! $neckless}
            }
         }
      }
      {$this set_track_in}
   )
   (intro_skip
      {$this reset}
      {$this sync_to_time}
      {$this set_showing
         {&&
            {gamecfg get show_track}
            {&&
               {! $cheat_enabled_performance_mode}
               {! $neckless}
            }
         }
      }
      {$this set_track_out}
      {switch {gamecfg get mode}
         (career
            {name_overlay_panel setup_text}
            {name_overlay_panel show_overlay
               {if_else $cheat_enabled_performance_mode
                  FALSE
                  {if_else $autoplay
                     TRUE
                     $nametitle
                  }
               }
            }
            TRACK_MODIFIER_HANDLERS
         )
         (quickplay
            {name_overlay_panel setup_text}
            {name_overlay_panel show_overlay
               {if_else $cheat_enabled_performance_mode
                  FALSE
                  {if_else $autoplay
                     TRUE
                     $nametitle
                  }
               }
            }
            TRACK_MODIFIER_HANDLERS
         )
         (multi_vs kDataUnhandled)
         (multi_fo kDataUnhandled)
         (multi_coop kDataUnhandled)
         (practice
            {name_overlay_panel setup_text}
            {name_overlay_panel show_overlay
               {if_else $cheat_enabled_performance_mode
                  FALSE
                  {if_else $autoplay
                     TRUE
                     $nametitle
                  }
               }
            }
            TRACK_MODIFIER_HANDLERS
         )
      }
   )
   (enter
      {name_overlay_panel show_overlay FALSE}
      {game add_sink $this blow_streak}
   )
   (exit
      {game remove_sink $this}
   )
   (do_extend_sequence
      {$this
         {if_else {== $trackcamx 1.0}
            animate_track_out
            set_track_out
         }
      }
      {switch {gamecfg get mode}
         (career
            {if {!= $trackcamx 1.0}
               TRACK_MODIFIER_HANDLERS
            }
         )
         (quickplay
            {if {!= $trackcamx 1.0}
               TRACK_MODIFIER_HANDLERS
            }
         )
         (multi_vs kDataUnhandled)
         (multi_fo kDataUnhandled)
         (multi_coop kDataUnhandled)
         (practice
            {if {!= $trackcamx 1.0}
               TRACK_MODIFIER_HANDLERS
            }
         )
      }
      {script_task
         (delay 1.3)
         (units kTaskSeconds)
         (script
            {$this play_track_sfx nowbar_1}
            {$this pop_smasher 0}
            {$this set_smasher_glowing 0 TRUE}
            {switch {gamecfg get mode}
               (career
                  {name_overlay_panel setup_text}
                  {name_overlay_panel show_overlay
                     {if_else $cheat_enabled_performance_mode
                        FALSE
                        {if_else $autoplay
                           TRUE
                           $nametitle
                        }
                     }
                  }
               )
               (quickplay
                  {name_overlay_panel setup_text}
                  {name_overlay_panel show_overlay
                     {if_else $cheat_enabled_performance_mode
                        FALSE
                        {if_else $autoplay
                           TRUE
                           $nametitle
                        }
                     }
                  }
               )
               (multi_vs kDataUnhandled)
               (multi_fo kDataUnhandled)
               (multi_coop kDataUnhandled)
               (practice
                  {name_overlay_panel setup_text}
                  {name_overlay_panel show_overlay
                     {if_else $cheat_enabled_performance_mode
                        FALSE
                        {if_else $autoplay
                           TRUE
                           $nametitle
                        }
                     }
                  }
               )
            }
         )
      }
      {script_task
         (delay 1.4)
         (units kTaskSeconds)
         (script
            {$this play_track_sfx nowbar_2}
            {$this pop_smasher 1}
            {$this set_smasher_glowing 1 TRUE}
         )
      }
      {script_task
         (delay 1.5)
         (units kTaskSeconds)
         (script
            {$this play_track_sfx nowbar_3}
            {$this pop_smasher 2}
            {$this set_smasher_glowing 2 TRUE}
         )
      }
      {script_task
         (delay 1.6)
         (units kTaskSeconds)
         (script
            {$this play_track_sfx nowbar_4}
            {$this pop_smasher 3}
            {$this set_smasher_glowing 3 TRUE}
         )
      }
      {script_task
         (delay 1.7)
         (units kTaskSeconds)
         (script
            {$this play_track_sfx nowbar_5}
            {$this pop_smasher 4}
            {$this set_smasher_glowing 4 TRUE}
         )
      }
      {script_task
         (delay 2)
         (units kTaskSeconds)
         (script
            {$this pop_smasher -1}
         )
      }
      {script_task
         (delay 2.5)
         (units kTaskSeconds)
         (script
            {game foreach_player_matcher $m
               {$m refresh_track_buttons}
            }
            {switch {gamecfg get mode}
               (career TRACK_MODIFIER_HANDLERS)
               (quickplay TRACK_MODIFIER_HANDLERS)
               (multi_vs kDataUnhandled)
               (multi_fo kDataUnhandled)
               (multi_coop kDataUnhandled)
               (practice TRACK_MODIFIER_HANDLERS)
            }
         )
      }
   )
}
{new TrackMaskPanel track_mask}