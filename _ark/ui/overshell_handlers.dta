#include slider_handlers.dta ;the slider handlers are a lot of script so keep it out of here
#define OVERSHELL_SCREEN_COMMON_HANDLER ;common overshell screen setup for all overshell screens
(
   (allow_back FALSE)
   (animate_transition FALSE) ;dont animate on overshell panels
)
#define OVERSHELL_COMMON_BUTTON_DOWN_HANDLER ;common script ran in all overshells to handle selections
(
   (BUTTON_DOWN_MSG
      {if
         {&& {! {$this slider_selected}} {== $button kPad_Tri}} ;if triangle is pressed, but not when exiting a slider
            {ui pop_screen} ;exit the current overshell screen
      }
      kDataUnhandled
   )
)
#define OVERSHELL_HELP_POP_HANDLER ;common script ran when exiting an overshell screen
(
   {if_else {&& {! {$this slider_selected}} $helpentered}
      {do
         {$this reset} ;reset the panel so we see our new options reflected
         {ui pop_screen} ;exit the current overshell screen
      }
      {do
         {$this reset} ;reset the panel so we see our new options reflected
         {ui push_screen overshell_help_screen}
      }
   }
)
{new
   SliderPanel
   overshell_slider
   (file overshell_slider.milo)
   OVERSHELL_THEME_HANDLER ;make sure the theme coding is loaded into this panel
   MODIFIER_SLIDER_HANDLERS ;found in slider_handlers.dta
}
{new
   GHScreen
   overshell_slider_screen
   (panels overshell_slider)
   (focus overshell_slider)
   OVERSHELL_SCREEN_COMMON_HANDLER ;common overshell screen setup for all overshell screens
   OVERSHELL_COMMON_BUTTON_DOWN_HANDLER ;common script ran in all overshells to handle selections
}
{new
   SliderPanel
   track_overshell_slider
   (file overshell_slider.milo)
   OVERSHELL_THEME_HANDLER ;make sure the theme coding is loaded into this panel
   TRACK_SLIDER_HANDLERS ;found in slider_handlers.dta
}
{new
   GHScreen
   overshell_track_slider_screen
   (panels track_overshell_slider)
   (focus track_overshell_slider)
   OVERSHELL_SCREEN_COMMON_HANDLER ;common overshell screen setup for all overshell screens
   OVERSHELL_COMMON_BUTTON_DOWN_HANDLER ;common script ran in all overshells to handle selections
}
{new
   SliderPanel
   color_overshell_slider
   (file overshell_slider.milo)
   OVERSHELL_THEME_HANDLER ;make sure the theme coding is loaded into this panel
   COLOR_SLIDER_HANDLERS ;found in slider_handlers.dta
}
{new
   GHScreen
   overshell_color_slider_screen
   (panels color_overshell_slider)
   (focus color_overshell_slider)
   OVERSHELL_SCREEN_COMMON_HANDLER ;common overshell screen setup for all overshell screens
   OVERSHELL_COMMON_BUTTON_DOWN_HANDLER ;common script ran in all overshells to handle selections
}
{new
   MultiSelectListPanel
   overshell_track_element_list
   (file overshell_list.milo)
   OVERSHELL_THEME_HANDLER ;make sure the theme coding is loaded into this panel
   (focus sel_section.lst)
   (enter
      {do
         {$this overshell_theme} ;run the theme code on the current overshell screen
         {gs_tile5.mesh set_showing FALSE} ;hide the spare mesh we put into the overshell list milo
         {sel_section.lst set_local_pos -140 0 35} ;move the list to the proper location
         {sel_section.lst set_data ;set up the data for the list
            (elm_name elm_starpower elm_streaklabel
             elm_starcounter elm_scorenumframe elm_gemcolor
             elm_smashercolor elm_trackrailcolor elm_beatlinecolor)
         }
         {sel_section.lst set circular 0}
         {gs_title.lbl set_text "TRACK ELEMENT"} ;set the title text for this screen
      }
   )
   (SELECT_START_MSG
      {switch {$component selected_sym}
         (elm_name {set $colormenu name})
         (elm_starpower {set $colormenu starpower})
         (elm_streaklabel {set $colormenu streaklabel})
         (elm_starcounter {set $colormenu starcounter})
         (elm_scorenumframe {set $colormenu scorenumframe})
         (elm_gemcolor {set $colormenu gemcolor})
         (elm_smashercolor {set $colormenu smashercolor})
         (elm_trackrailcolor {set $colormenu trackrailcolor})
         (elm_beatlinecolor {set $colormenu beatlinecolor})
      }
      {color_overshell_slider set_colors}
      {ui pop_screen} ;exit the current overshell screen
   )
   OVERSHELL_COMMON_BUTTON_DOWN_HANDLER ;common script ran in all overshells to handle selections
}
{new
   GHScreen
   overshell_track_element_list_screen
   (panels overshell_track_element_list)
   (focus overshell_track_element_list)
   OVERSHELL_SCREEN_COMMON_HANDLER ;common overshell screen setup for all overshell screens
   OVERSHELL_COMMON_BUTTON_DOWN_HANDLER ;common script ran in all overshells to handle selections
}
{new
   MultiSelectListPanel
   overshell_track_list
   (file overshell_list.milo)
   (focus sel_section.lst)
   OVERSHELL_THEME_HANDLER ;make sure the theme coding is loaded into this panel
   (enter
      {$this overshell_theme} ;run the theme code on the current overshell screen
      {gs_tile5.mesh set_showing FALSE} ;hide the spare mesh we put into the overshell list milo
      ;{sel_section.lst set_selected $trackmodifierlistpos}
      {sel_section.lst set_local_pos -140 0 35} ;move the list to the proper location
      {sel_section.lst set alignment kTopCenter} ;ensure the list is aligned properly
      {gs_title.lbl set_text "TRACK MODIFIERS"} ;set the title text for this screen
      {sel_section.lst set_data ;set up the data for the list
         (os_cloneherohud os_brighthopos os_darkstrums
          os_gh1track os_gh3track os_voidfrets os_eyeballgems)
      }
   )
   (SELECT_START_MSG
      {switch {$component selected_sym}
         (os_voidfrets
            {if_else $voidfrets
               {do
                  {play_sfx cheat_off}
                  {set $voidfrets FALSE}
               }
               {do
                  {play_sfx cheat}
                  {set $voidfrets TRUE}
               }
            }
         )
         (os_eyeballgems
            {if_else $eyeballgems
               {do
                  {play_sfx cheat_off}
                  {set $eyeballgems FALSE}
               }
               {do
                  {play_sfx cheat}
                  {set $eyeballgems TRUE}
               }
            }
         )
         (os_cloneherohud
            {if_else $clonehero_hud
               {do
                  {play_sfx cheat_off}
                  {set $clonehero_hud FALSE}
                  {set $trackcamx 1.0}
               }
               {do
                  {play_sfx cheat}
                  {set $clonehero_hud TRUE}
                  {set $trackcamx 1.3}
                  {set $sppop FALSE}
               }
            }
         )
         (os_brighthopos
            {if_else $brighthopos
               {do
                  {play_sfx cheat_off}
                  {set $brighthopos FALSE}
               }
               {do
                  {play_sfx cheat}
                  {set $brighthopos TRUE}
               }
            }
         )
         (os_darkstrums
            {if_else $darkstrums
               {do
                  {play_sfx cheat_off}
                  {set $darkstrums FALSE}
               }
               {do
                  {play_sfx cheat}
                  {set $darkstrums TRUE}
               }
            }
         )
         (os_gh1track
            {if_else $gh1track
               {do
                  {play_sfx cheat_off}
                  {set $gh1track FALSE}
               }
               {do
                  {play_sfx cheat}
                  {set $gh3track FALSE}
                  {set $gh1track TRUE}
               }
            }
         )
         (os_gh3track
            {if_else $gh3track
               {do
                  {play_sfx cheat_off}
                  {set $gh3track FALSE}
               }
               {do
                  {play_sfx cheat}
                  {set $gh1track FALSE}
                  {set $gh3track TRUE}
               }
            }
         )
      }
      {set $trackmodifierlistpos {sel_section.lst selected_pos}}
      {if_else {&& {! {$this slider_selected}} $helpentered}
         {do
            {sel_section.lst set_selected $trackmodifierlistpos}
            {$this reset} ;reset the panel so we see our new options reflected
         }
         {do
            {sel_section.lst set_data ;set up the data for the list
               (os_cloneherohud os_brighthopos os_darkstrums
                os_gh1track os_gh3track os_voidfrets os_eyeballgems)
            }
            {ui push_screen overshell_help_screen}
         }
      }
   )
   OVERSHELL_COMMON_BUTTON_DOWN_HANDLER ;common script ran in all overshells to handle selections
}
{new
   GHScreen
   overshell_track_list_screen
   (panels overshell_track_list)
   (focus overshell_track_list)
   OVERSHELL_SCREEN_COMMON_HANDLER ;common overshell screen setup for all overshell screens
   OVERSHELL_COMMON_BUTTON_DOWN_HANDLER ;common script ran in all overshells to handle selections
}
#define OVERSHELL_LIST_CONTENTS
(
   (
       os_focusmode os_skipintro os_skipoutro
       os_sfx os_trkmod os_selhw os_font
       os_whammyfx os_muting os_nofail os_noflames
       os_songtitle os_nametitle os_cleanmtv
       os_brutalmode os_towel os_epictext
       os_notestreakmod os_sppop os_highwayshake
       os_selecttorestart os_drums os_monkeyhead
       os_eyeballhead os_flaminghead os_neckless
       os_performance os_autoplay os_roxbury
    )
)
#define OVERSHELL_LIST_RESET_HANDLER
(
   {set $modifierlistpos {sel_section.lst selected_pos}}
   {if_else {&& {! {$this slider_selected}} $helpentered}
      {do
         {sel_section.lst set_selected $modifierlistpos}
         {$this reset} ;reset the panel so we see our new options reflected
      }
      {do
         {sel_section.lst set_data ;set up the data for the list
            OVERSHELL_LIST_CONTENTS
         }
         {ui push_screen overshell_help_screen}
      }
   }
)
#define CHEAT_POP
(
   {play_sfx cheat}
   {play_sfx cheat_off}
)
{new
   MultiSelectListPanel
   overshell_list
   (file overshell_list.milo)
   (focus sel_section.lst)
   OVERSHELL_THEME_HANDLER ;make sure the theme coding is loaded into this panel
   (enter
      {$this overshell_theme} ;run the theme code on the current overshell screen
      {gs_tile5.mesh set_showing FALSE} ;hide the spare mesh we put into the overshell list milo
      {sel_section.lst set_selected $modifierlistpos}
      {sel_section.lst set_local_pos -140 0 35} ;move the list to the proper location
      {sel_section.lst set circular 1}
      {sel_section.lst set alignment kTopCenter} ;ensure the list is aligned properly
      {gs_title.lbl set_text "MODIFIERS"} ;set the title text for this screen
      {sel_section.lst set_data ;set up the data for the list
         OVERSHELL_LIST_CONTENTS
      }
   )
   (SELECT_START_MSG
      {switch {$component selected_sym}
      (os_selhw
         {ui push_screen overshell_highway_list_screen}
      )
      (os_font
         {ui push_screen overshell_font_list_screen}
      )
      (os_trkmod
         {ui push_screen overshell_track_list_screen}
      )
      (os_sfx
         {set $sfx {! $sfx}}
         {if_else $sfx
            CHEAT_POP
         }
      )
      (os_sppop
         {set $sppop {! $sppop}}
         {if_else $sppop
            CHEAT_POP
         }
      )
      (os_whammyfx
         {set $whammyfx {! $whammyfx}}
         {if_else $whammyfx
            CHEAT_POP
         }
      )
      (os_muting
         {set $muting {! $muting}}
         {if_else $muting
            CHEAT_POP
         }
      )
      (os_epictext
         {set $epictext {! $epictext}}
         {if_else $epictext
            CHEAT_POP
         }
      )
      (os_autoplay
         {set $autoplay {! $autoplay}}
         {set $gotcha TRUE}
         {if_else $autoplay
            CHEAT_POP
         }
      )
      (os_notestreakmod
         {set $notestreakmod {! $notestreakmod}}
         {if_else $notestreakmod
            CHEAT_POP
         }
      )
      (os_selecttorestart
         {set $selecttorestart {! $selecttorestart}}
         {if_else $selecttorestart
            CHEAT_POP
         }
      )
      (os_towel
         {set $towel {! $towel}}
         {if_else $towel
            CHEAT_POP
         }
      )
      (os_skipintro
         {set $miloskipintro {! $miloskipintro}}
         {if_else $miloskipintro
            CHEAT_POP
         }
      )
      (os_focusmode
         {if_else $focusmode
            {do
               {play_sfx cheat_off}
               {set $focusmode FALSE}
               {set $miloskipintro FALSE}
               {set $skipoutro FALSE}
               {set $notestreakmod TRUE}
               {set $sfx TRUE}
            }
            {do
               {play_sfx cheat}
               {set $focusmode TRUE}
               {set $miloskipintro TRUE}
               {set $skipoutro TRUE}
               {set $notestreakmod FALSE}
               {set $sfx FALSE}
            }
         }
      )
      (os_skipoutro
         {set $skipoutro {! $skipoutro}}
         {if_else $skipoutro
            CHEAT_POP
         }
      )
      (os_noflames
         {set $noflames {! $noflames}}
         {if_else $noflames
            CHEAT_POP
         }
      )
      (os_nofail
         {set $nofail {! $nofail}}
         {if_else $nofail
            CHEAT_POP
         }
      )
      (os_cleanmtv
         {set $cleanmtv {! $cleanmtv}}
         {if_else $cleanmtv
            CHEAT_POP
         }
      )
      (os_brutalmode
         {set $brutalmode {! $brutalmode}}
         {if_else $brutalmode
            CHEAT_POP
         }
      )
      (os_songtitle
         {set $songtitle {! $songtitle}}
         {if_else $songtitle
            CHEAT_POP
         }
      )
      (os_nametitle
         {set $nametitle {! $nametitle}}
         {if_else $nametitle
            CHEAT_POP
         }
      )
      (os_highwayshake
         {set $highwayshake {! $highwayshake}}
         {if_else $highwayshake
            CHEAT_POP
         }
      )
      (os_drums
         {set $drumenabled {! $drumenabled}}
         {if_else $drumenabled
            CHEAT_POP
         }
      )
      (os_horsehead
         {set $cheat_enabled_horse_head_mode {! $cheat_enabled_horse_head_mode}}
         {if_else $cheat_enabled_horse_head_mode
            CHEAT_POP
         }
      )
      (os_monkeyhead
         {if_else {'||' {$cheat_crowd_heads 0} {$cheat_crowd_heads eyeball_crowd_heads}}
            {do
               {play_sfx cheat_off}
               {set $cheat_crowd_heads 0}
            }
            {do
               {play_sfx cheat}
               {set $cheat_crowd_heads monkey_crowd_heads}
            }
         }
      )
      (os_eyeballhead
         {if_else {'||' {$cheat_crowd_heads 0} {$cheat_crowd_heads monkey_crowd_heads}}
            {do
               {play_sfx cheat_off}
               {set $cheat_crowd_heads 0}
            }
            {do
               {play_sfx cheat}
               {set $cheat_crowd_heads eyeball_crowd_heads}
            }
         }
      )
      (os_flaminghead
         {set $cheat_enabled_flaming_head {! $cheat_enabled_flaming_head}}
         {if_else $cheat_enabled_flaming_head
            CHEAT_POP
         }
      )
      (os_neckless
         {set $neckless {! $neckless}}
         {if_else $neckless
            CHEAT_POP
         }
      )
      (os_performance
         {set $cheat_enabled_performance_mode {! $cheat_enabled_performance_mode}}
         {if_else $cheat_enabled_performance_mode
            CHEAT_POP
         }
      )
      (os_roxbury
         {set $barf_cheat {! $barf_cheat}}
         {if_else $barf_cheat
            CHEAT_POP
         }
      )
   }
      OVERSHELL_LIST_RESET_HANDLER
      kDataUnhandled
   )
   OVERSHELL_COMMON_BUTTON_DOWN_HANDLER ;common script ran in all overshells to handle selections
}
{new
   GHScreen
   overshell_list_screen
   (panels overshell_list)
   (focus overshell_list)
   OVERSHELL_SCREEN_COMMON_HANDLER ;common overshell screen setup for all overshell screens
   OVERSHELL_COMMON_BUTTON_DOWN_HANDLER ;common script ran in all overshells to handle selections
}
{new
   GHScreen
   overshell_character_list_screen
   (panels overshell_character_list)
   (focus overshell_character_list)
   OVERSHELL_SCREEN_COMMON_HANDLER ;common overshell screen setup for all overshell screens
   OVERSHELL_COMMON_BUTTON_DOWN_HANDLER ;common script ran in all overshells to handle selections
}
#define OVERSHELL_DIFF_RESET_HANDLER
(
   {set $difflistpos {sel_section.lst selected_pos}}
   {if_else {&& {! {$this slider_selected}} $helpentered}
      {do
         {sel_section.lst set_selected $difflistpos}
         {$this reset} ;reset the panel so we see our new options reflected
      }
      {do
         {ui push_screen overshell_help_screen}
      }
   }
)
{new
   MultiSelectListPanel
   overshell_diff_list
   (file overshell_list.milo)
   OVERSHELL_THEME_HANDLER ;make sure the theme coding is loaded into this panel
   (focus sel_section.lst)
   (enter
   {do
      {$this overshell_theme} ;run the theme code on the current overshell screen
         {gs_tile5.mesh set_showing FALSE} ;hide the spare mesh we put into the overshell list milo
         {sel_section.lst set_selected $difflistpos}
         {sel_section.lst set_local_pos -140 0 35} ;move the list to the proper location
         {sel_section.lst set_data ;set up the data for the list
            (Easy Medium Hard Expert os_leftyp1 os_leftyp2)
         }
         {sel_section.lst set circular 0}
         {gs_title.lbl set_text "DIFFICULTY"} ;set the title text for this screen
      }
   )
   (SELECT_START_MSG
      {switch {$component selected_sym}
         (os_leftyp2
            {set $leftyp2 {! $leftyp2}}
            {options set_lefty 1 $leftyp2}
            {if_else $leftyp2
               CHEAT_POP
            }
         )
         (os_leftyp1
            {set $leftyp1 {! $leftyp1}}
            {options set_lefty 0 $leftyp1}
            {if_else $leftyp1
               CHEAT_POP
            }
         )
         (Easy
            {{game get_player_config 0} set_difficulty kDifficultyEasy}
            OVERSHELL_HELP_POP_HANDLER
         )
         (Medium
            {{game get_player_config 0} set_difficulty kDifficultyMedium}
            OVERSHELL_HELP_POP_HANDLER
         )
         (Hard
            {{game get_player_config 0} set_difficulty kDifficultyHard}
            OVERSHELL_HELP_POP_HANDLER
         )
         (Expert
            {{game get_player_config 0} set_difficulty kDifficultyExpert}
            OVERSHELL_HELP_POP_HANDLER
         )
      }
      OVERSHELL_DIFF_RESET_HANDLER
   )
   OVERSHELL_COMMON_BUTTON_DOWN_HANDLER ;common script ran in all overshells to handle selections
}
{new
   GHScreen
   overshell_diff_list_screen
   (panels overshell_diff_list)
   (focus overshell_diff_list)
   OVERSHELL_SCREEN_COMMON_HANDLER ;common overshell screen setup for all overshell screens
   OVERSHELL_COMMON_BUTTON_DOWN_HANDLER ;common script ran in all overshells to handle selections
}
{new
   MultiSelectListPanel
   overshell_character_list
   (file overshell_list.milo) ;choose the milo to load
   OVERSHELL_THEME_HANDLER ;make sure the theme coding is loaded into this panel
   (focus sel_section.lst) ;focus the loaded list
   (update_char_pic ;ran from thread_task in this panel
      {set $uipicturenumber {+ $uipicturenumber 1}} ;increase the image number for display
      {if {> $uipicturenumber 3} ;check if we reached the end of our available images
         {set $uipicturenumber 0} ;reset displayed image back to the first one
      }
      {gs_pic.tex set_bitmap {sprint "ui/image/ng/photo_" $charactermenu $uipicturenumber "_keep.bmp"}} ;set the new image for display
   )
   (enter ;when the panel is entered
      {$this overshell_theme} ;run the theme code on the current overshell screen
      {sel_section.lst set_local_pos -140 0 35} ;move the list to the proper location
      {sel_section.lst set circular 1} ;set the list to wrap around when the end is reached
      {sel_section.lst set_data ;set up the data for the list
         (random punk1 punk2 alterna1 ;list of all available characters
          alterna2 glam1 glam2 goth2
          goth1 metal1 metal2 rockabill1
          rockabill2 rock2 rock1 deathmetal1
          deathmetal2 classic funk1 grim
         )
      }
      {gs_title.lbl set_text "CHARACTERS"} ;set the title label for the current screen
      {gs_background.view add_object gs_tile5.mesh} ;make sure we have the spare mesh loaded
      {gs_tile5.mesh set_local_pos 125 100 100} ;position spare image
      {gs_tile5.mesh set_local_scale_index 0 .9} ;scale spare image
      {gs_tile5.mesh set_local_scale_index 2 .5} ;scale spare image
      {gs_tile5.mat set diffuse_tex gs_pic.tex} ;set up the material
      {set $uipicturenumber 0} ;set default image number
      {set $charactermenu random} ;set default pic (we enter to random)
      {gs_pic.tex set_bitmap {sprint "ui/image/ng/photo_" $charactermenu $uipicturenumber "_keep.bmp"}} ;set the spare texture to the default pic
      {if {exists char_pic_task} ;check if the below task is running
         {delete char_pic_task} ;delete the task if already running
      }
      {thread_task ;run a new task
         (units kTaskUISeconds) ;we are in ui so use ui seconds
         (name char_pic_task) ;name the task for pruning later
         (script
            {$this update_char_pic} ;run update_char_pic block
            {$task sleep 1.3} ;wait
            {$task loop} ;loop task
         )
      }
   )
   (SCROLL_MSG
      {set $uipicturenumber {+ $uipicturenumber 1}}
      {if {> $uipicturenumber 3} {set $uipicturenumber 0}}
      {set $charactermenu {$component selected_sym}}
      {gs_pic.tex set_bitmap {sprint "ui/image/ng/photo_" $charactermenu $uipicturenumber "_keep.bmp"}}
      {$this update})
   (SELECT_START_MSG
      {set $forcecharacter TRUE}
      {switch
       {$component selected_sym}
       (random {set $forcecharacter FALSE}
       OVERSHELL_HELP_POP_HANDLER)
       (punk1 {game set_character punk1 TRUE}
       OVERSHELL_HELP_POP_HANDLER)
       (punk2 {game set_character punk2 TRUE}
       OVERSHELL_HELP_POP_HANDLER)
       (alterna1 {game set_character alterna1 TRUE}
       OVERSHELL_HELP_POP_HANDLER)
       (alterna2 {game set_character alterna2 TRUE}
       OVERSHELL_HELP_POP_HANDLER)
       (glam1 {game set_character glam1 TRUE}
       OVERSHELL_HELP_POP_HANDLER)
       (glam2 {game set_character glam2 TRUE}
       OVERSHELL_HELP_POP_HANDLER)
       (goth2 {game set_character goth2 TRUE}
       OVERSHELL_HELP_POP_HANDLER)
       (goth1 {game set_character goth1 TRUE}
       OVERSHELL_HELP_POP_HANDLER)
       (metal1 {game set_character metal1 TRUE}
       OVERSHELL_HELP_POP_HANDLER)
       (metal2 {game set_character metal2 TRUE}
       OVERSHELL_HELP_POP_HANDLER)
       (rockabill1 {game set_character rockabill1 TRUE}
       OVERSHELL_HELP_POP_HANDLER)
       (rockabill2 {game set_character rockabill2 TRUE}
       OVERSHELL_HELP_POP_HANDLER)
       (rock2 {game set_character rock2 TRUE}
       OVERSHELL_HELP_POP_HANDLER)
       (rock1 {game set_character rock1 TRUE}
       OVERSHELL_HELP_POP_HANDLER)
       (deathmetal1 {game set_character deathmetal1 TRUE}
       OVERSHELL_HELP_POP_HANDLER)
       (deathmetal2 {game set_character deathmetal2 TRUE}
       OVERSHELL_HELP_POP_HANDLER)
       (classic {game set_character classic TRUE}
       OVERSHELL_HELP_POP_HANDLER)
       (funk1 {game set_character funk1 TRUE}
       OVERSHELL_HELP_POP_HANDLER)
       (grim {game set_character grim TRUE}
       OVERSHELL_HELP_POP_HANDLER)}
      kDataUnhandled)
   OVERSHELL_COMMON_BUTTON_DOWN_HANDLER ;common script ran in all overshells to handle selections
}
{new
   GHScreen
   overshell_character_list_screen
   (panels overshell_character_list)
   (focus overshell_character_list)
   OVERSHELL_SCREEN_COMMON_HANDLER ;common overshell screen setup for all overshell screens
   OVERSHELL_COMMON_BUTTON_DOWN_HANDLER ;common script ran in all overshells to handle selections
}
{new
   MultiSelectListPanel
   overshell_venue_list
   (file overshell_list.milo)
   OVERSHELL_THEME_HANDLER ;make sure the theme coding is loaded into this panel
   (focus sel_section.lst)
   (enter
   {do
      {$this overshell_theme} ;run the theme code on the current overshell screen
         {gs_tile5.mesh set_showing FALSE} ;hide the spare mesh we put into the overshell list milo
         {sel_section.lst set_local_pos -140 0 35} ;move the list to the proper location
         {sel_section.lst set_data ;set up the data for the list
            (random battle small1 small2 big theatre fest arena stone)}
         {sel_section.lst set circular 1}}
         {gs_title.lbl set_text "VENUES"} ;set the title text for this screen
         )
   (SELECT_START_MSG
      {set $forcevenue TRUE}
      {switch
       {$component selected_sym}
       (random {set $forcevenue FALSE}
       OVERSHELL_HELP_POP_HANDLER)
       (battle {game set_venue battle TRUE}
       OVERSHELL_HELP_POP_HANDLER)
       (small1 {game set_venue small1 TRUE}
       OVERSHELL_HELP_POP_HANDLER)
       (small2 {game set_venue small2 TRUE}
       OVERSHELL_HELP_POP_HANDLER)
       (big {game set_venue big TRUE}
       OVERSHELL_HELP_POP_HANDLER)
       (theatre {game set_venue theatre TRUE}
       OVERSHELL_HELP_POP_HANDLER)
       (fest {game set_venue fest TRUE}
       OVERSHELL_HELP_POP_HANDLER)
       (arena {game set_venue arena TRUE}
       OVERSHELL_HELP_POP_HANDLER)
       (stone {game set_venue stone TRUE}
       OVERSHELL_HELP_POP_HANDLER)}
      kDataUnhandled)
   OVERSHELL_COMMON_BUTTON_DOWN_HANDLER ;common script ran in all overshells to handle selections
}
{new
   GHScreen
   overshell_venue_list_screen
   (panels overshell_venue_list)
   (focus overshell_venue_list)
   OVERSHELL_SCREEN_COMMON_HANDLER ;common overshell screen setup for all overshell screens
   OVERSHELL_COMMON_BUTTON_DOWN_HANDLER ;common script ran in all overshells to handle selections
}
{new
   MultiSelectListPanel
   overshell_guitar_list
   (file overshell_list.milo)
   OVERSHELL_THEME_HANDLER ;make sure the theme coding is loaded into this panel
   (focus sel_section.lst)
   (enter
      {$this overshell_theme} ;run the theme code on the current overshell screen
      {sel_section.lst set_local_pos -140 0 35} ;move the list to the proper location
      {sel_section.lst set circular 1}
      {gs_title.lbl set_text "GUITARS"} ;set the title text for this screen
      {gs_tile5.mesh set_showing FALSE} ;hide the spare mesh we put into the overshell list milo
      {sel_section.lst set_data ;set up the data for the list
         (random lespaul lp_cayenne lp_goddessburst lp_zakk
          sg sg_white sg_gt sg_flames
          flying_v fv_v2 fv_century fv_red
          explorer exp_nat exp_sun exp_white exp_swirl
          lespaul_doublecut lp_dbl_resin
          firebird fb_blue fb_ebony fb_leopard
          epiphone_coronet coronet_cherry coronet_burst coronet_green
          kramer_vanguard van_yellow
          moderne mod_cherry
          corvus cor_nat
          es335 es_cherry
          kramer_650 650_white
          eds eds_white
          lespaul_doublecut_sticker lespaul_sonex lespaul_marauder
          epiphone_casino epiphone_sheraton chet_atkins fish_reward usa_reward
          coffin_reward viking_reward snaketapus_reward eyeball_reward
          battleaxe_reward log_reward scythe #ifndef HX_XBOX guitar_red_octane #endif
          bass_musicman bass_musicman_lava bass_sg_mahogany bass_sg_cream bass_grabber_cherry
          bass_grabber_maple bass_thunderbird_ebony bass_thunderbird_burst bass_hofner)
      }
   )
   (SELECT_START_MSG
      {set $forceguitar TRUE}
      {switch
       {$component selected_sym}
       (random {set $forceguitar FALSE}
       OVERSHELL_HELP_POP_HANDLER)
       (lespaul {game set_guitar lespaul lp_cherry}
       OVERSHELL_HELP_POP_HANDLER)
       (lp_cherry {game set_guitar lespaul lp_cherry}
       OVERSHELL_HELP_POP_HANDLER)
       (lp_cayenne {game set_guitar lespaul lp_cayenne}
       OVERSHELL_HELP_POP_HANDLER)
       (lp_goddessburst {game set_guitar lespaul lp_goddessburst}
       OVERSHELL_HELP_POP_HANDLER)
       (lp_zakk {game set_guitar lespaul lp_zakk}
       OVERSHELL_HELP_POP_HANDLER)
       (sg {game set_guitar sg sg_cherry}
       OVERSHELL_HELP_POP_HANDLER)
       (sg_cherry {game set_guitar sg sg_cherry}
       OVERSHELL_HELP_POP_HANDLER)
       (sg_white {game set_guitar sg sg_white}
       OVERSHELL_HELP_POP_HANDLER)
       (sg_gt {game set_guitar sg sg_gt}
       OVERSHELL_HELP_POP_HANDLER)
       (sg_flames {game set_guitar sg sg_flames}
       OVERSHELL_HELP_POP_HANDLER)
       (flying_v {game set_guitar flying_v fv_white}
       OVERSHELL_HELP_POP_HANDLER)
       (fv_white {game set_guitar flying_v fv_white}
       OVERSHELL_HELP_POP_HANDLER)
       (fv_v2 {game set_guitar flying_v fv_v2}
       OVERSHELL_HELP_POP_HANDLER)
       (fv_century {game set_guitar flying_v fv_century}
       OVERSHELL_HELP_POP_HANDLER)
       (fv_red {game set_guitar flying_v fv_red}
       OVERSHELL_HELP_POP_HANDLER)
       (explorer {game set_guitar explorer exp_ebony}
       OVERSHELL_HELP_POP_HANDLER)
       (exp_ebony {game set_guitar explorer exp_ebony}
       OVERSHELL_HELP_POP_HANDLER)
       (exp_nat {game set_guitar explorer exp_nat}
       OVERSHELL_HELP_POP_HANDLER)
       (exp_sun {game set_guitar explorer exp_sun}
       OVERSHELL_HELP_POP_HANDLER)
       (exp_white {game set_guitar explorer exp_white}
       OVERSHELL_HELP_POP_HANDLER)
       (exp_swirl {game set_guitar explorer exp_swirl}
       OVERSHELL_HELP_POP_HANDLER)
       (lespaul_doublecut {game set_guitar lespaul_doublecut lp_dbl_white}
       OVERSHELL_HELP_POP_HANDLER)
       (lp_dbl_yellow {game set_guitar lespaul_doublecut lp_dbl_yellow}
       OVERSHELL_HELP_POP_HANDLER)
       (lp_dbl_resin {game set_guitar lespaul_doublecut lp_dbl_resin}
       OVERSHELL_HELP_POP_HANDLER)
       (firebird {game set_guitar firebird fb_burst}
       OVERSHELL_HELP_POP_HANDLER)
       (fb_burst {game set_guitar firebird fb_burst}
       OVERSHELL_HELP_POP_HANDLER)
       (fb_blue {game set_guitar firebird fb_blue}
       OVERSHELL_HELP_POP_HANDLER)
       (fb_ebony {game set_guitar firebird fb_ebony}
       OVERSHELL_HELP_POP_HANDLER)
       (fb_leopard {game set_guitar firebird fb_leopard}
       OVERSHELL_HELP_POP_HANDLER)
       (epiphone_coronet {game set_guitar epiphone_coronet coronet_brown}
       OVERSHELL_HELP_POP_HANDLER)
       (coronet_brown {game set_guitar epiphone_coronet coronet_brown}
       OVERSHELL_HELP_POP_HANDLER)
       (coronet_cherry {game set_guitar epiphone_coronet coronet_cherry}
       OVERSHELL_HELP_POP_HANDLER)
       (coronet_burst {game set_guitar epiphone_coronet coronet_burst}
       OVERSHELL_HELP_POP_HANDLER)
       (coronet_green {game set_guitar epiphone_coronet coronet_green}
       OVERSHELL_HELP_POP_HANDLER)
       (kramer_vanguard {game set_guitar kramer_vanguard van_black}
       OVERSHELL_HELP_POP_HANDLER)
       (van_black {game set_guitar kramer_vanguard van_black}
       OVERSHELL_HELP_POP_HANDLER)
       (van_yellow {game set_guitar kramer_vanguard van_yellow}
       OVERSHELL_HELP_POP_HANDLER)
       (moderne {game set_guitar moderne mod_nat}
       OVERSHELL_HELP_POP_HANDLER)
       (mod_nat {game set_guitar moderne mod_nat}
       OVERSHELL_HELP_POP_HANDLER)
       (mod_cherry {game set_guitar moderne mod_cherry}
       OVERSHELL_HELP_POP_HANDLER)
       (corvus {game set_guitar corvus cor_yellow}
       OVERSHELL_HELP_POP_HANDLER)
       (cor_yellow {game set_guitar corvus cor_yellow}
       OVERSHELL_HELP_POP_HANDLER)
       (cor_nat {game set_guitar corvus cor_nat}
       OVERSHELL_HELP_POP_HANDLER)
       (es335 {game set_guitar es335 es_maple}
       OVERSHELL_HELP_POP_HANDLER)
       (es_maple {game set_guitar es335 es_maple}
       OVERSHELL_HELP_POP_HANDLER)
       (es_cherry {game set_guitar es335 es_cherry}
       OVERSHELL_HELP_POP_HANDLER)
       (kramer_650 {game set_guitar kramer_650 650_stripe}
       OVERSHELL_HELP_POP_HANDLER)
       (650_stripe {game set_guitar kramer_650 650_stripe}
       OVERSHELL_HELP_POP_HANDLER)
       (650_white {game set_guitar kramer_650 650_white}
       OVERSHELL_HELP_POP_HANDLER)
       (eds {game set_guitar eds eds_cherry}
       OVERSHELL_HELP_POP_HANDLER)
       (eds_cherry {game set_guitar eds eds_cherry}
       OVERSHELL_HELP_POP_HANDLER)
       (eds_white {game set_guitar eds eds_white}
       OVERSHELL_HELP_POP_HANDLER)
       (lespaul_doublecut_sticker {game set_guitar lespaul_doublecut_sticker lp_dbl_sticker}
       OVERSHELL_HELP_POP_HANDLER)
       (lespaul_sonex {game set_guitar lespaul_sonex lp_sonex}
       OVERSHELL_HELP_POP_HANDLER)
       (lespaul_marauder {game set_guitar lespaul_marauder lp_marauder}
       OVERSHELL_HELP_POP_HANDLER)
       (epiphone_casino {game set_guitar epiphone_casino casino}
       OVERSHELL_HELP_POP_HANDLER)
       (epiphone_sheraton {game set_guitar epiphone_sheraton sheraton}
       OVERSHELL_HELP_POP_HANDLER)
       (chet_atkins {game set_guitar chet_atkins chet_orange}
       OVERSHELL_HELP_POP_HANDLER)
       (fish_reward {game set_guitar fish_reward fish}
       OVERSHELL_HELP_POP_HANDLER)
       (usa_reward {game set_guitar usa_reward usa}
       OVERSHELL_HELP_POP_HANDLER)
       (coffin_reward {game set_guitar coffin_reward coffin}
       OVERSHELL_HELP_POP_HANDLER)
       (viking_reward {game set_guitar viking_reward viking}
       OVERSHELL_HELP_POP_HANDLER)
       (snaketapus_reward {game set_guitar snaketapus_reward snaketapus}
       OVERSHELL_HELP_POP_HANDLER)
       (eyeball_reward {game set_guitar eyeball_reward eyeball}
       OVERSHELL_HELP_POP_HANDLER)
       (battleaxe_reward {game set_guitar battleaxe_reward battleaxe}
       OVERSHELL_HELP_POP_HANDLER)
       (log_reward {game set_guitar log_reward log}
       OVERSHELL_HELP_POP_HANDLER)
       (scythe {game set_guitar scythe scythe}
       OVERSHELL_HELP_POP_HANDLER)
       (guitar_red_octane {game set_guitar guitar_red_octane guitar_red_octane}
       OVERSHELL_HELP_POP_HANDLER)
       (bass_musicman {game set_guitar bass_musicman bass_music_black}
       OVERSHELL_HELP_POP_HANDLER)
       (bass_musicman_lava {game set_guitar bass_musicman_lava bass_music_lava}
       OVERSHELL_HELP_POP_HANDLER)
       (bass_sg_mahogany {game set_guitar bass_sg_mahogany bass_sg_mahog}
       OVERSHELL_HELP_POP_HANDLER)
       (bass_sg_cream {game set_guitar bass_sg_cream bass_sg_cream}
       OVERSHELL_HELP_POP_HANDLER)
       (bass_grabber_cherry {game set_guitar bass_grabber_cherry bass_grab_cherry}
       OVERSHELL_HELP_POP_HANDLER)
       (bass_grabber_maple {game set_guitar bass_grabber_maple bass_grab_maple}
       OVERSHELL_HELP_POP_HANDLER)
       (bass_thunderbird_ebony {game set_guitar bass_thunderbird_ebony bass_tb_ebony}
       OVERSHELL_HELP_POP_HANDLER)
       (bass_thunderbird_burst {game set_guitar bass_thunderbird_burst bass_tb_burst}
       OVERSHELL_HELP_POP_HANDLER)
       (bass_hofner {game set_guitar bass_hofner bass_hofner}
       OVERSHELL_HELP_POP_HANDLER)}
      kDataUnhandled)
   OVERSHELL_COMMON_BUTTON_DOWN_HANDLER ;common script ran in all overshells to handle selections
}
{new
   GHScreen
   overshell_guitar_list_screen
   (panels overshell_guitar_list)
   (focus overshell_guitar_list)
   OVERSHELL_SCREEN_COMMON_HANDLER ;common overshell screen setup for all overshell screens
   OVERSHELL_COMMON_BUTTON_DOWN_HANDLER ;common script ran in all overshells to handle selections
}
{new GHPanel overshell_theme_panel
   (file overshell_theme.milo)
   OVERSHELL_THEME_HANDLER ;make sure the theme coding is loaded into this panel
   (focus resume.btn)
   (reset_focus TRUE)
   (enter
      {$this overshell_theme} ;run the theme code on the current overshell screen
      {pause_title.lbl set_text "THEME SELECT"} ;set the title text for this screen
      {diff.btn set_showing FALSE}
      {extra2.btn set_showing FALSE}
      {$this disable diff.btn}
      {$this disable extra2.btn})}
{new
   GHScreen
   overshell_theme_list_screen
   (panels overshell_theme_panel)
   (focus overshell_theme_panel) 
   OVERSHELL_SCREEN_COMMON_HANDLER ;common overshell screen setup for all overshell screens 
   (SELECT_START_MSG
      {switch $component
       (newsong.btn
         {do
         {set $menutheme custom}
         {set $gh3song FALSE}
         {set $gh1track FALSE}
         {set $gh3track FALSE}
         OVERSHELL_HELP_POP_HANDLER})
       (resume.btn
         {do
         {set $menutheme gh1}
         {set $gh1track TRUE}
         {set $gh3song FALSE}
         {set $gh3track FALSE}
         OVERSHELL_HELP_POP_HANDLER})
       (restart.btn
         {do
         {set $menutheme gh2}
         {set $gh3song FALSE}
         {set $gh1track FALSE}
         {set $gh3track FALSE}
         OVERSHELL_HELP_POP_HANDLER})
      (change_speed.btn
         {do
         {set $menutheme 80s}
         {set $gh3song FALSE}
         {set $gh1track FALSE}
         {set $gh3track FALSE}
         OVERSHELL_HELP_POP_HANDLER})
      (section.btn
         {do
         {set $menutheme gh3}
         {set $gh3song TRUE}
         {set $gh3track TRUE}
         OVERSHELL_HELP_POP_HANDLER})
       (quit.btn
         {do
         {set $menutheme gold}
         OVERSHELL_HELP_POP_HANDLER})
       (extra1.btn
         {ui push_screen overshell_song_theme_screen})}
       kDataUnhandled)
   OVERSHELL_COMMON_BUTTON_DOWN_HANDLER ;common script ran in all overshells to handle selections
}
{new
   SliderPanel
   pause_audio_settings_panel
   (file pause_audio_settings_gh1.milo)
   OVERSHELL_THEME_HANDLER ;make sure the theme coding is loaded into this panel
   AUDIO_SETTINGS_PANEL_HANDLERS}
{new
   GHScreen
   pause_audio_settings_screen
   (panels pause_audio_settings_panel)
   (focus pause_audio_settings_panel)
   OVERSHELL_SCREEN_COMMON_HANDLER ;common overshell screen setup for all overshell screens
   OVERSHELL_COMMON_BUTTON_DOWN_HANDLER ;common script ran in all overshells to handle selections
}
{new
   MultiSelectListPanel
   overshell_highway_list
   (file overshell_list.milo)
   OVERSHELL_THEME_HANDLER ;make sure the theme coding is loaded into this panel
   (focus sel_section.lst)
   (enter
    {$this overshell_theme} ;run the theme code on the current overshell screen
    {gs_background.view add_object gs_tile5.mesh}
    {gs_tile5.mesh set_local_pos 125 100 100}
    {gs_tile5.mesh set_local_scale_index 0 .6}
    {gs_tile5.mesh set_local_scale_index 2 .5}
    {gs_tile5.mat set diffuse_tex gs_pic.tex}
    {set $highwaymenu _black_highway}
    {gs_pic.tex set_bitmap {sprint "track/surfaces/" $highwaymenu "_keep.bmp"}}
   {do
         {sel_section.lst set_local_pos -140 0 35} ;move the list to the proper location
         {sel_section.lst set_data ;set up the data for the list
            (#include ../track/surfaces/highways.dta)
         }
         {sel_section.lst set circular 1}}
         {gs_title.lbl set_text "SET HIGHWAY"} ;set the title text for this screen
         )
   (SELECT_START_MSG
      {set $highway {$component selected_sym}}
      OVERSHELL_HELP_POP_HANDLER
       kDataUnhandled)
    (SCROLL_MSG
      {set $highwaymenu {$component selected_sym}}
      {gs_pic.tex set_bitmap {sprint "track/surfaces/" $highwaymenu "_keep.bmp"}}
      {$this update})
   OVERSHELL_COMMON_BUTTON_DOWN_HANDLER ;common script ran in all overshells to handle selections
}
{new
   GHScreen
   overshell_highway_list_screen
   (panels overshell_highway_list)
   (focus overshell_highway_list)
   OVERSHELL_SCREEN_COMMON_HANDLER ;common overshell screen setup for all overshell screens
   OVERSHELL_COMMON_BUTTON_DOWN_HANDLER ;common script ran in all overshells to handle selections
}
{new
   GHScreen
   overshell_font_list_screen
   (panels overshell_font_list)
   (focus overshell_font_list)
   OVERSHELL_SCREEN_COMMON_HANDLER ;common overshell screen setup for all overshell screens
   OVERSHELL_COMMON_BUTTON_DOWN_HANDLER ;common script ran in all overshells to handle selections
}
{new
   MultiSelectListPanel
   overshell_font_list
   (file overshell_list.milo)
   OVERSHELL_THEME_HANDLER ;make sure the theme coding is loaded into this panel
   (focus sel_section.lst)
   (enter
   {$this overshell_theme} ;run the theme code on the current overshell screen
   {gs_tile5.mesh set_showing FALSE} ;hide the spare mesh we put into the overshell list milo
   {set $fontmenu blockletters}
   {gs_title.lbl set_type $fontmenu}
   {do
         {sel_section.lst set_local_pos -140 0 35} ;move the list to the proper location
         {sel_section.lst set_data ;set up the data for the list
            (blockletters blockletters_fill clarendon cutout dyingmarker
             gh3veticablackcondensed gunsho hand helveticablack helveticablackcondensed
             helveticathin impact impactor oldenglish postertype receipt rockletters rokk serif tapeworm tapewormscreen)}
         {sel_section.lst set circular 1}}
         {gs_title.lbl set_text "SET FONT"} ;set the title text for this screen
      )
   (SELECT_START_MSG
      {set $namefont {$component selected_sym}}
      OVERSHELL_HELP_POP_HANDLER
       kDataUnhandled)
    (SCROLL_MSG
      {set $fontmenu {$component selected_sym}}
      {gs_title.lbl set_type $fontmenu}
      {$this update})
   OVERSHELL_COMMON_BUTTON_DOWN_HANDLER ;common script ran in all overshells to handle selections
}
{new
   GHScreen
   overshell_font_list_screen
   (panels overshell_font_list)
   (focus overshell_font_list)
   OVERSHELL_SCREEN_COMMON_HANDLER ;common overshell screen setup for all overshell screens
   OVERSHELL_COMMON_BUTTON_DOWN_HANDLER ;common script ran in all overshells to handle selections
}
{new
   GHPanel
   overshell_help_panel
   (file overshell_help.milo)
   OVERSHELL_THEME_HANDLER ;make sure the theme coding is loaded into this panel
   (focus quit.btn)
   (enter
      {$this overshell_theme} ;run the theme code on the current overshell screen
      {pause_controller_msg.lbl set_text
      "This is me warning you that
      if in game, you must back out
      to the nearest loading screen
      for most modifications to
      properly load and enable."}
      {$this set_focus quit.btn}
      {set $helpentered TRUE})}
{new
   GHScreen
   overshell_help_screen
   (panels overshell_help_panel)
   (focus overshell_help_panel)
   OVERSHELL_SCREEN_COMMON_HANDLER ;common overshell screen setup for all overshell screens
   (SELECT_START_MSG
      {ui pop_screen} ;exit the current overshell screen
   )
   OVERSHELL_COMMON_BUTTON_DOWN_HANDLER ;common script ran in all overshells to handle selections
}
{new
   MultiSelectListPanel
   overshell_song_theme_list
   (file overshell_list.milo)
   OVERSHELL_THEME_HANDLER ;make sure the theme coding is loaded into this panel
   (focus sel_section.lst)
   (enter
      {$this overshell_theme} ;run the theme code on the current overshell screen
      {gs_tile5.mesh set_showing FALSE} ;hide the spare mesh we put into the overshell list milo
      {sel_section.lst set_local_pos -140 0 35} ;move the list to the proper location
      {sel_section.lst set_data ;set up the data for the list
         (os_altsong os_gh3song os_loopsong) ;data for the list
      }
      {gs_title.lbl set_text "SONG LIST THEMES"} ;set the title text for this screen
   )
   (SELECT_START_MSG
      {switch {$component selected_sym}
         (os_gh3song
            {if_else $gh3song
               {do
                  {play_sfx cheat_off}
                  {set $gh3song FALSE}
               }
               {do
                  {play_sfx cheat}
                  {set $gh3song TRUE}
                  {set $altsong FALSE}
               }
            }
         )
      (os_altsong
         {if_else $altsong
            {do
               {play_sfx cheat_off}
               {set $altsong FALSE}
            }
            {do
               {play_sfx cheat}
               {set $altsong TRUE}
               {set $gh3song FALSE}
            }
         }
      )
      (os_loopsong
         {if_else $loopsong
            {do
               {play_sfx cheat_off}
               {set $loopsong FALSE}
            }
            {do
               {play_sfx cheat}
               {set $loopsong TRUE}
            }
         }
      )
   }
   {do
      {set $sngthmlistpos {sel_section.lst selected_pos}} ;save our current list position
      {sel_section.lst set_selected $sngthmlistpos} ;select our saved list position
      {$this reset} ;reset the panel so we see our new options reflected
   }
)
   OVERSHELL_COMMON_BUTTON_DOWN_HANDLER ;common script ran in all overshells to handle selections
}
{new
   GHScreen
   overshell_song_theme_screen
   (panels overshell_song_theme_list)
   (focus overshell_song_theme_list)
   OVERSHELL_SCREEN_COMMON_HANDLER ;common overshell screen setup for all overshell screens
   OVERSHELL_COMMON_BUTTON_DOWN_HANDLER ;common script ran in all overshells to handle selections
}