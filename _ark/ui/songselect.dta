{new
   GHPanel
   sel_song_panel
   (file
      {if_else $altsong sel_song_alt.milo 
      {if_else $gh3song 
      {do 
         {if_else
            {== $gh3list 1}
         {do
            {if_else $loopsong   
            sel_song_gh3_loop_both.milo
            sel_song_gh3_both.milo}}
         {if_else
            {== $gh3list 2}
         {do
            {if_else $loopsong   
            sel_song_gh3_loop_gum.milo
            sel_song_gh3_gum.milo}}
         {if_else
            {== $gh3list 3}
         {do
            {if_else $loopsong   
            sel_song_gh3_loop_string.milo
            sel_song_gh3_string.milo}}
         {do
            {if_else $loopsong   
            sel_song_gh3_loop.milo
            sel_song_gh3.milo}}}}}}
      sel_song.milo}})
   (metamusic_on_exit TRUE)
   (focus ss_song.lst)
   (joypad
      (hold_ms 180)
      (repeat_ms 30))
   (page_down
      {$this update_pos}
      {$this update_pos})
#ifdef HX_XBOX
   (load
      {profilemgr add_sink $this storage_changed}
      {content_mgr start_enumeration})
   (storage_changed
      {$this clear_cache}
      {ui goto_screen storage_changed_screen})
#endif
(random_char
     {if {! $forcecharacter}
       {switch $randomnumber
       (0 {game set_character punk1 TRUE})
       (1 {game set_character punk2 TRUE})
       (2 {game set_character alterna1 TRUE})
       (3 {game set_character alterna2 TRUE})
       (4 {game set_character glam1 TRUE})
       (5 {game set_character glam2 TRUE})
       (6 {game set_character goth2 TRUE})
       (7 {game set_character goth1 TRUE})
       (8 {game set_character metal1 TRUE})
       (9 {game set_character metal2 TRUE})
       (10 {game set_character rockabill1 TRUE})
       (11 {game set_character rockabill2 TRUE})
       (12 {game set_character rock2 TRUE})
       (13 {game set_character rock1 TRUE})
       (14 {game set_character deathmetal1 TRUE})
       (15 {game set_character deathmetal2 TRUE})
       (16 {game set_character classic TRUE})
       (17 {game set_character funk1 TRUE})
       (18 {game set_character grim TRUE})}})
   (random_venue
     {if {! $forcevenue}
       {switch $randomvenuenumber
       (0 {game set_venue battle TRUE})
       (1 {game set_venue small1 TRUE})
       (2 {game set_venue small2 TRUE})
       (3 {game set_venue big TRUE})
       (4 {game set_venue theatre TRUE})
       (5 {game set_venue fest TRUE})
       (6 {game set_venue arena TRUE})
       (7 {game set_venue stone TRUE})
       }})
   (random_guitar
     {if {! $forceguitar}
       {switch $randomguitarnumber
       (1  {game set_guitar lespaul lp_cherry})
       (2  {game set_guitar lespaul lp_cayenne})
       (3  {game set_guitar lespaul lp_goddessburst})
       (4  {game set_guitar lespaul lp_zakk})
       (5  {game set_guitar sg sg_cherry})
       (6  {game set_guitar sg sg_white})
       (7  {game set_guitar sg sg_gt})
       (8  {game set_guitar sg sg_flames})
       (9  {game set_guitar flying_v fv_white})
       (10 {game set_guitar flying_v fv_v2})
       (11 {game set_guitar flying_v fv_century})
       (12 {game set_guitar flying_v fv_red})
       (13 {game set_guitar explorer exp_ebony})
       (14 {game set_guitar explorer exp_nat})
       (15 {game set_guitar explorer exp_sun})
       (16 {game set_guitar explorer exp_white})
       (17 {game set_guitar explorer exp_swirl})
       (18 {game set_guitar lespaul_doublecut lp_dbl_white})
       (19 {game set_guitar lespaul_doublecut lp_dbl_yellow})
       (20 {game set_guitar lespaul_doublecut lp_dbl_resin})
       (21 {game set_guitar firebird fb_burst})
       (22 {game set_guitar firebird fb_blue})
       (23 {game set_guitar firebird fb_ebony})
       (24 {game set_guitar firebird fb_leopard})
       (25 {game set_guitar epiphone_coronet coronet_brown})
       (26 {game set_guitar epiphone_coronet coronet_cherry})
       (27 {game set_guitar epiphone_coronet coronet_burst})
       (28 {game set_guitar epiphone_coronet coronet_green})
       (29 {game set_guitar kramer_vanguard van_black})
       (30 {game set_guitar kramer_vanguard van_yellow})
       (31 {game set_guitar moderne mod_nat})
       (32 {game set_guitar moderne mod_cherry})
       (33 {game set_guitar corvus cor_yellow})
       (34 {game set_guitar corvus cor_nat})
       (35 {game set_guitar es335 es_maple})
       (36 {game set_guitar es335 es_cherry})
       (37 {game set_guitar kramer_650 650_stripe})
       (38 {game set_guitar kramer_650 650_white})
       (39 {game set_guitar eds eds_cherry})
       (40 {game set_guitar eds eds_white})
       (41 {game set_guitar lespaul_doublecut_sticker lp_dbl_sticker})
       (42 {game set_guitar lespaul_sonex lp_sonex})
       (43 {game set_guitar lespaul_marauder lp_marauder})
       (44 {game set_guitar epiphone_casino casino})
       (45 {game set_guitar epiphone_sheraton sheraton})
       (46 {game set_guitar chet_atkins chet_orange})
       (47 {game set_guitar fish_reward fish})
       (48 {game set_guitar usa_reward usa})
       (49 {game set_guitar coffin_reward coffin})
       (50 {game set_guitar viking_reward viking})
       (51 {game set_guitar snaketapus_reward snaketapus})
       (52 {game set_guitar eyeball_reward eyeball})
       (53 {game set_guitar battleaxe_reward battleaxe})
       (54 {game set_guitar log_reward log})
       (55 {game set_guitar scythe scythe})
       (56 {game set_guitar guitar_red_octane guitar_red_octane})
       (57 {game set_guitar bass_musicman bass_music_black})
       (58 {game set_guitar bass_musicman_lava bass_music_lava})
       (59 {game set_guitar bass_sg_mahogany bass_sg_mahog})
       (60 {game set_guitar bass_sg_cream bass_sg_cream})
       (61 {game set_guitar bass_grabber_cherry bass_grab_cherry})
       (62 {game set_guitar bass_grabber_maple bass_grab_maple})
       (63 {game set_guitar bass_thunderbird_ebony bass_tb_ebony})
       (64 {game set_guitar bass_thunderbird_burst bass_tb_burst})
       (65 {game set_guitar bass_hofner bass_hofner})
       }})
   
   (enter ;when the screen is entered
      {if {! $forcecharacter} {set $randomnumber {random_int 0 18}} {$this random_char}}
      {if {! $forcevenue} {set $randomvenuenumber {random_int 0 7}} {$this random_venue}}
      {if {! $forceguitar} {set $randomguitarnumber {random_int 0 65}} {$this random_guitar}}
   {if_else $altsong
   {do
      {sd_select.lbl set_local_pos 0 150 200}
      {sd_select.lbl set_local_scale 5 400 5}
      {sd_select.lbl set_text "CHOOSE SONG"}
      {ss_song.lst set_local_pos 25 230 140}}
   {if_else $gh3song
   {do
      {if_else $loopsong
      {do
         {ss_song.lst set_local_pos 25 230 150}
         {ss_song.lst set_local_scale 1 1 0.975}}
      {ss_song.lst set_local_pos 25 230 140}}}
   {do
      {cp_title.lbl set_local_pos 70 50 -15}
      {cp_title.lbl set_text "CHOOSE SONG"}
      {pencil.mesh set_local_pos 250 30 -30}
      {pencil_shadow.mesh set_local_pos 180 30 -30}
      {notebook.mesh set_local_scale 1.4 1 1}
      {ss_song.lst set_local_pos 160 230 140}
      {ss_song.lst set_local_rot 0 4 0}}}}
   {set $gameentered FALSE}
   {ss_song.lst set circular $loopsong}
   {set $author FALSE}
   {{ui current_screen} turn_off_ambient}
      {$this refresh})
   (update_song_info
      {ss_song.lst
         set_selected
         {game get_song_index}}
#ifdef HX_XBOX
       {if
         {! $leaderboards_mode}
         {meta_music stop}
         {profilemgr disable_xmp}}
#else
      {meta_music stop}
#endif
      {$this update_pos})
   (exit
      {if {exists random_guitar_task} {delete random_guitar_task}}
      {if {exists random_char_task} {delete random_char_task}}
      {if {exists random_venue_task} {delete random_venue_task}}
      {song_preview ''}
      {if
         [metamusic_on_exit]
         {meta_music start}
         #ifdef HX_XBOX {profilemgr enable_xmp} #endif}
      {set
         [metamusic_on_exit]
         TRUE}
      #ifndef HX_XBOX
      {song_provider set_quickplay FALSE}
      #else
      {song_provider set_mode kSongsCareer}
      #endif)
#ifdef HX_XBOX
(unload
      {profilemgr remove_sink $this storage_changed})
#endif
   (SCROLL_MSG
      {$this update_pos})
   (update_pos
      {do
         ($pos
            {ss_song.lst selected_pos})
         {game set_song_index $pos}
#ifdef HX_XBOX {$this cache_song} #endif
         {song_preview
            {game get_song}}})
   (beat_song
      ($score)
      {if
         {$this is_up}
         {do
            ($index
               {ss_song.lst selected_pos})
            ($song
               {song_provider get_symbol $index})
            {campaign cheat_beat_song $song $score}
            {$this refresh}}})
   (beat_song
      {if
         {$this is_up}
         {do
            ($index
               {ss_song.lst selected_pos})
            ($song
               {song_provider get_symbol $index})
            {campaign beat_song $song}
            {$this refresh}}})
   (gold_song
      {if
         {$this is_up}
         {campaign
            cheat_gold_song
            {song_provider
               get_symbol
               {ss_song.lst selected_pos}}}
         {$this refresh}})
#ifdef HX_XBOX
(refresh
      {song_provider
         set_mode
         {switch
            {ui current_screen}
            (leaderboards_song_screen kSongsLeaderboards)
            (sel_song_screen kSongsCareer)
            kSongsQuickplay}}
      {ss_song.lst set_provider song_provider}
      {if
         {&&
            {! $leaderboards_mode}
            {==
               {game get_song_index}
               -1}}
         {game set_song_index 0}}
      {$this update_song_info}
      {checkmark.mesh set_showing FALSE})
#else
   (refresh
      {if
         {!
            {{ui current_screen}
               sel_song_career}}
         {song_provider set_quickplay TRUE}}
      {ss_song.lst set_provider song_provider}
      {if
         {==
            {game get_song_index}
            -1}
         {game set_song_index 0}}
      {$this update_song_info})
#endif}
{new
   GHScreen
   sel_song_screen
   (panels meta sel_song_panel helpbar)
   (focus sel_song_panel)
   (helpbar
      (default
         ((fret1 help_continue)
            (fret2 help_back)
            (strum help_updown))))
   (sel_song_career TRUE)
   (enter {if $gh3song {helpbar set_showing FALSE}})
   (BUTTON_DOWN_MSG
      {if
         {== $button kPad_Tri}
         {$this backwards_anim}
         {synth play_sequence button_back.cue}
         {helpbar set_showing TRUE}
         {ui goto_screen main_screen}}
      kDataUnhandled)
   (SELECT_START_MSG
      {switch
         {gamecfg get mode}
            (career {ui goto_screen qp_selpart_screen})
            (quickplay {ui goto_screen qp_selpart_screen})
            (multi_vs kDataUnhandled)
            (multi_fo kDataUnhandled)
            (practice {ui goto_screen qp_selpart_screen})
            (multi_coop
               {gamecfg set_track 0 0}
               {gamecfg set_track 1 1}
               {if_else
                  {'||'
                     {song_provider
                        has_instrument
                        {gamecfg get_song}
                        bass}
                     {song_provider
                        has_instrument
                        {gamecfg get_song}
                        rhythm}}
                  {ui goto_screen selpart_screen}
                  {ui goto_screen multi_coop_seldiff_screen}
                }
            )
       }
      {sel_song_panel set metamusic_on_exit TRUE}
      kDataUnhandled)}
{new
   GHScreen
   storage_changed_screen
   DIALOG_SCREEN
   (enter
      {dialog setup mc_continue '' button1 mc_storage_changed mc_title_error})
   (SELECT_START_MSG
      {ui goto_screen main_screen})}